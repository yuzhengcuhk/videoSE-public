// Generated by the gRPC C++ plugin.
// If you make any local change, they will be lost.
// source: diana.proto

#include "diana.pb.h"
#include "diana.grpc.pb.h"

#include <grpcpp/impl/codegen/async_stream.h>
#include <grpcpp/impl/codegen/async_unary_call.h>
#include <grpcpp/impl/codegen/channel_interface.h>
#include <grpcpp/impl/codegen/client_unary_call.h>
#include <grpcpp/impl/codegen/method_handler_impl.h>
#include <grpcpp/impl/codegen/rpc_service_method.h>
#include <grpcpp/impl/codegen/service_type.h>
#include <grpcpp/impl/codegen/sync_stream.h>
namespace sse {
namespace diana {

static const char* Diana_method_names[] = {
  "/sse.diana.Diana/setup",
  "/sse.diana.Diana/search",
  "/sse.diana.Diana/insert",
  "/sse.diana.Diana/bulk_insert",
};

std::unique_ptr< Diana::Stub> Diana::NewStub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options) {
  (void)options;
  std::unique_ptr< Diana::Stub> stub(new Diana::Stub(channel));
  return stub;
}

Diana::Stub::Stub(const std::shared_ptr< ::grpc::ChannelInterface>& channel)
  : channel_(channel), rpcmethod_setup_(Diana_method_names[0], ::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_search_(Diana_method_names[1], ::grpc::internal::RpcMethod::SERVER_STREAMING, channel)
  , rpcmethod_insert_(Diana_method_names[2], ::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_bulk_insert_(Diana_method_names[3], ::grpc::internal::RpcMethod::CLIENT_STREAMING, channel)
  {}

::grpc::Status Diana::Stub::setup(::grpc::ClientContext* context, const ::sse::diana::SetupMessage& request, ::google::protobuf::Empty* response) {
  return ::grpc::internal::BlockingUnaryCall(channel_.get(), rpcmethod_setup_, context, request, response);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* Diana::Stub::AsyncsetupRaw(::grpc::ClientContext* context, const ::sse::diana::SetupMessage& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::google::protobuf::Empty>::Create(channel_.get(), cq, rpcmethod_setup_, context, request, true);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* Diana::Stub::PrepareAsyncsetupRaw(::grpc::ClientContext* context, const ::sse::diana::SetupMessage& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::google::protobuf::Empty>::Create(channel_.get(), cq, rpcmethod_setup_, context, request, false);
}

::grpc::ClientReader< ::sse::diana::SearchReply>* Diana::Stub::searchRaw(::grpc::ClientContext* context, const ::sse::diana::SearchRequestMessage& request) {
  return ::grpc::internal::ClientReaderFactory< ::sse::diana::SearchReply>::Create(channel_.get(), rpcmethod_search_, context, request);
}

::grpc::ClientAsyncReader< ::sse::diana::SearchReply>* Diana::Stub::AsyncsearchRaw(::grpc::ClientContext* context, const ::sse::diana::SearchRequestMessage& request, ::grpc::CompletionQueue* cq, void* tag) {
  return ::grpc::internal::ClientAsyncReaderFactory< ::sse::diana::SearchReply>::Create(channel_.get(), cq, rpcmethod_search_, context, request, true, tag);
}

::grpc::ClientAsyncReader< ::sse::diana::SearchReply>* Diana::Stub::PrepareAsyncsearchRaw(::grpc::ClientContext* context, const ::sse::diana::SearchRequestMessage& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncReaderFactory< ::sse::diana::SearchReply>::Create(channel_.get(), cq, rpcmethod_search_, context, request, false, nullptr);
}

::grpc::Status Diana::Stub::insert(::grpc::ClientContext* context, const ::sse::diana::UpdateRequestMessage& request, ::google::protobuf::Empty* response) {
  return ::grpc::internal::BlockingUnaryCall(channel_.get(), rpcmethod_insert_, context, request, response);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* Diana::Stub::AsyncinsertRaw(::grpc::ClientContext* context, const ::sse::diana::UpdateRequestMessage& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::google::protobuf::Empty>::Create(channel_.get(), cq, rpcmethod_insert_, context, request, true);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* Diana::Stub::PrepareAsyncinsertRaw(::grpc::ClientContext* context, const ::sse::diana::UpdateRequestMessage& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::google::protobuf::Empty>::Create(channel_.get(), cq, rpcmethod_insert_, context, request, false);
}

::grpc::ClientWriter< ::sse::diana::UpdateRequestMessage>* Diana::Stub::bulk_insertRaw(::grpc::ClientContext* context, ::google::protobuf::Empty* response) {
  return ::grpc::internal::ClientWriterFactory< ::sse::diana::UpdateRequestMessage>::Create(channel_.get(), rpcmethod_bulk_insert_, context, response);
}

::grpc::ClientAsyncWriter< ::sse::diana::UpdateRequestMessage>* Diana::Stub::Asyncbulk_insertRaw(::grpc::ClientContext* context, ::google::protobuf::Empty* response, ::grpc::CompletionQueue* cq, void* tag) {
  return ::grpc::internal::ClientAsyncWriterFactory< ::sse::diana::UpdateRequestMessage>::Create(channel_.get(), cq, rpcmethod_bulk_insert_, context, response, true, tag);
}

::grpc::ClientAsyncWriter< ::sse::diana::UpdateRequestMessage>* Diana::Stub::PrepareAsyncbulk_insertRaw(::grpc::ClientContext* context, ::google::protobuf::Empty* response, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncWriterFactory< ::sse::diana::UpdateRequestMessage>::Create(channel_.get(), cq, rpcmethod_bulk_insert_, context, response, false, nullptr);
}

Diana::Service::Service() {
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      Diana_method_names[0],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< Diana::Service, ::sse::diana::SetupMessage, ::google::protobuf::Empty>(
          std::mem_fn(&Diana::Service::setup), this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      Diana_method_names[1],
      ::grpc::internal::RpcMethod::SERVER_STREAMING,
      new ::grpc::internal::ServerStreamingHandler< Diana::Service, ::sse::diana::SearchRequestMessage, ::sse::diana::SearchReply>(
          std::mem_fn(&Diana::Service::search), this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      Diana_method_names[2],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< Diana::Service, ::sse::diana::UpdateRequestMessage, ::google::protobuf::Empty>(
          std::mem_fn(&Diana::Service::insert), this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      Diana_method_names[3],
      ::grpc::internal::RpcMethod::CLIENT_STREAMING,
      new ::grpc::internal::ClientStreamingHandler< Diana::Service, ::sse::diana::UpdateRequestMessage, ::google::protobuf::Empty>(
          std::mem_fn(&Diana::Service::bulk_insert), this)));
}

Diana::Service::~Service() {
}

::grpc::Status Diana::Service::setup(::grpc::ServerContext* context, const ::sse::diana::SetupMessage* request, ::google::protobuf::Empty* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status Diana::Service::search(::grpc::ServerContext* context, const ::sse::diana::SearchRequestMessage* request, ::grpc::ServerWriter< ::sse::diana::SearchReply>* writer) {
  (void) context;
  (void) request;
  (void) writer;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status Diana::Service::insert(::grpc::ServerContext* context, const ::sse::diana::UpdateRequestMessage* request, ::google::protobuf::Empty* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status Diana::Service::bulk_insert(::grpc::ServerContext* context, ::grpc::ServerReader< ::sse::diana::UpdateRequestMessage>* reader, ::google::protobuf::Empty* response) {
  (void) context;
  (void) reader;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}


}  // namespace sse
}  // namespace diana

